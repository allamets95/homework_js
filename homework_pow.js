function pow(x, y) {
    // Ініціалізація результату значенням 1
    let result = 1;
    
    // Якщо y дорівнює 0, результат завжди 1
    if (y === 0) {
        return result;
    }
    
    // Цикл для множення x на себе y разів
    for (let i = 0; i < y; i++) {
        result *= x;
    }
    
    // Повертаємо отриманий результат
    return result;
}

var prompt = require('prompt'); // Імпорт бібліотеки prompt для роботи з командним рядком

// Конфігурація schema для prompt (Взято з https://www.npmjs.com/package/prompt)
// regex: /^-?\d+(\.\d+)?$/
// правило: Тільки цілі числа більші за 0
var schema = {
    properties: {
        number1: {
            description: 'Введіть перше число', // Опис для введення першого числа
            pattern: /^-?\d+(\.\d+)?$/, // Regex паттерн для перевірки, що введене значення є будь-яким числом
            message: 'Будь ласка, введіть валідне число', // Повідомлення при некоректному введенні
            required: true // Поле обов'язкове для заповнення
        },
        number2: {
            description: 'Введіть друге число', // Опис для введення другого числа
            pattern: /^-?\d+(\.\d+)?$/, // Regex паттерн для перевірки, що введене значення є будь-яким числом
            message: 'Будь ласка, введіть валідне число', // Повідомлення при некоректному введенні
            required: true // Поле обов'язкове для заповнення
        }
    }
};

prompt.start(); // Запускаємо prompt для введення даних

// Отримуємо дані від користувача: вік
prompt.get(schema, function (err, result) {
    if (err) { // Перевіряємо, чи сталася помилка
      console.error(err); // Виводимо помилку в консоль
      return; // Завершуємо функцію у випадку помилки
    }

    // Виводимо результат в консоль
    console.log("Result: " + pow(result.number1, result.number2));
});